import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import './globals.css';
import { Navbar, ThemeProvider } from './components';
import { AuthProvider } from '@/app/context';

const inter = Inter({ subsets: ['latin'] });

export const metadata: Metadata = {
  /**
   * Replace `https://acme.com` with URL of the hosted version aka `https://weichain-nextjs-template.org`
   * Work in pair with `alternates`
   */
  metadataBase: new URL('https://acme.com'),
  title: {
    // Max 60 characters for best results
    default: 'NextJS Template',
    // Max 60 characters for best results
    template: `%s | NextJS Template`
  },
  // Max 160 characters for best results
  description: 'Generated by create nextjs template',
  applicationName: 'NextJS Template',
  // Idk how much tbh but on the examples i can see 20 `keywords` so i assume that will be good amount
  keywords: ['Next.js', 'React', 'JavaScript', 'NextJS Template'],
  authors: [{ name: 'John' }, { name: 'Doe', url: 'https://nextjs.org' }],
  creator: 'Bob',
  publisher: 'Alice',
  alternates: {
    canonical: '/',
    languages: {
      'en-US': '/en-US'
      // This will go extra good in combination with `i18n`
      // 'de-DE': '/de-DE'
    }
  },
  openGraph: {
    // Match default state, not required tho but good for consistency
    title: 'NextJS Template',
    description: 'Generated by create nextjs template',
    // URL from `metadataBase url`
    url: 'https://acme.com',
    // replace with real site name aka LightHouse Furniture,
    siteName: 'weichain next generator',
    type: 'website',
    locale: 'en_US'
  },
  twitter: {
    // Match default state, not required tho but good for consistency
    title: 'NextJS Template',
    description: 'Generated by create nextjs template',
    // replace with real site name aka LightHouse Furniture,
    site: 'weichain next generator',
    card: 'summary_large_image',
    siteId: '@nextjs-template'
  }
};

export default function RootLayout({
  children
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang='en' suppressHydrationWarning>
      <body className={inter.className}>
        <AuthProvider>
          <ThemeProvider
            attribute='class'
            defaultTheme='system'
            enableSystem
            disableTransitionOnChange
          >
            <Navbar />
            <main className='flex justify-center items-start p-6 min-h-screen'>
              {children}
            </main>
          </ThemeProvider>
        </AuthProvider>
      </body>
    </html>
  );
}
